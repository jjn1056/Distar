#!/usr/bin/env perl
use strict;
use warnings FATAL => 'all';
use Config;
use File::Spec;
use File::Find;
use ExtUtils::MakeMaker ();
use Getopt::Long qw(:config gnu_getopt);

GetOptions(
  "branch=s"     => \(my $branch = 'master'),
) or die("Error in command line arguments\n");

my $version = shift or die "version required!";

my $make = $Config{make};
my $null = File::Spec->devnull;

system("git fetch");
if (system("git rev-parse --quiet --verify v$version >$null") == 0) {
  die "Tag v$version already exists!";
}

File::Find::find({ no_chdir => 1, wanted => sub {
  return
    unless -f && /\.pm$/;
  my $file_version = MM->parse_version($_);
  die "Module $_ version $file_version doesn't match dist version $version"
    unless $file_version eq 'undef' || $file_version eq $version;
}}, 'lib');

for (scalar `"$make" manifest 2>&1 >$null`) {
  $_ && die "$make manifest changed:\n$_ Go check it and retry";
}

for (scalar `git status`) {
  /^(?:# )?On branch \Q$branch\E/ || die "Not on $branch. EEEK";
  /Your branch is behind|Your branch and .*? have diverged/ && die "Not synced with upstream";
}

for (scalar `git diff`) {
  length && die "Outstanding changes";
}
my $ymd = sprintf(
  "%i-%02i-%02i", (gmtime)[5]+1900, (gmtime)[4]+1, (gmtime)[3]
);
my $changes_line = "$version - $ymd\n";
my @cached = grep /^\+/, `git diff --cached -U0`;
@cached > 0 or die "Please add:\n\n$changes_line\nto Changes stage Changes (git add Changes)";
@cached == 2 or die "Pre-commit Changes not just Changes line";
$cached[0] =~ /^\+\+\+ .\/Changes\n/ or die "Changes not changed";
$cached[1] eq "+$changes_line" or die "Changes new line should be: \n\n$changes_line ";

{ no warnings 'exec'; `cpan-upload -h`; }
$? and die "cpan-upload not available";
